AWSTemplateFormatVersion: '2010-09-09'
Description: 'This cloudformation code creates an S3 bucket that is used to store images. It also provisions a Lambda function that is triggered by an image upload event and is responsible for converting the images.'
Parameters:
  AppName:
    Type: String
    Default: 'image-converter'
    Description: Enter the name of the application. Do not use underscores (_) or uppercase letters as this parameter is used for naming AWS resources.
    AllowedPattern: (?=^.{3,63}$)(^[a-z0-9]+[a-z0-9\-]+[a-z0-9]+$)

  EnvironmentType:
    Description: The environment type
    Type: String
    Default: local
    AllowedValues:
      - local
      - ci
      - prod
    ConstraintDescription: must be a local, ci or prod

Mappings:
  ImageConverterLambdaFunctionMap:
    local:
      'AwsEndPointUrl': 'http://localstack:4566'
    ci:
      'AwsEndPointUrl': 'http://localstack:4566'
    prod:
      'AwsEndPointUrl': ''

Resources:
  ImageConverterLambdaFunctionRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/AmazonS3FullAccess'
        - 'arn:aws:iam::aws:policy/CloudWatchLogsFullAccess'
      RoleName: !Sub ${AppName}-image-converter-lambda-function-role

  ImageConverterLambdaFunction:
    Type: 'AWS::Lambda::Function'
    Properties:
      Code:
        S3Bucket: !Sub ${AppName}-lambda-code-s3-bucket
        S3Key: 'bootstrap.zip'
      FunctionName: !Sub ${AppName}-image-converter-lambda-function
      Handler: 'main.lambda_handler'
      MemorySize: 128
      Role: !GetAtt 'ImageConverterLambdaFunctionRole.Arn'
      Runtime: 'python3.9'
      Timeout: 30
      Environment:
        Variables:
          IMAGE_STORAGE_S3_BUCKET: !Sub ${AppName}-image-storage-s3-bucket
          AWS_ENDPOINT_URL:
            !FindInMap [ImageConverterLambdaFunctionMap, !Ref EnvironmentType, AwsEndPointUrl]

  ImageConverterLambdaFunctionPermission:
    Type: 'AWS::Lambda::Permission'
    Properties:
      Action: 'lambda:InvokeFunction'
      FunctionName: !GetAtt
        - ImageConverterLambdaFunction
        - Arn
      Principal: 's3.amazonaws.com'
      SourceArn: !Join
        - ''
        - - 'arn:aws:s3:::'
          - !Sub ${AppName}-image-storage-s3-bucket

  ImageStorageS3Bucket:
    Type: 'AWS::S3::Bucket'
    DependsOn: 'ImageConverterLambdaFunctionPermission'
    Properties:
      BucketName: !Sub ${AppName}-image-storage-s3-bucket
      CorsConfiguration:
        CorsRules:
          - AllowedHeaders:
              - '*'
            AllowedMethods:
              - HEAD
              - GET
              - POST
              - PUT
            AllowedOrigins:
              - '*'
            ExposedHeaders:
              - 'ETAG'
      NotificationConfiguration:
        LambdaConfigurations:
          - Event: 's3:ObjectCreated:*'
            Filter:
              S3Key:
                Rules:
                  - Name: suffix
                    Value: jpg
            Function: !GetAtt
              - ImageConverterLambdaFunction
              - Arn
          - Event: 's3:ObjectCreated:*'
            Filter:
              S3Key:
                Rules:
                  - Name: suffix
                    Value: JPG
            Function: !GetAtt
              - ImageConverterLambdaFunction
              - Arn
          - Event: 's3:ObjectCreated:*'
            Filter:
              S3Key:
                Rules:
                  - Name: suffix
                    Value: jpeg
            Function: !GetAtt
              - ImageConverterLambdaFunction
              - Arn
          - Event: 's3:ObjectCreated:*'
            Filter:
              S3Key:
                Rules:
                  - Name: suffix
                    Value: JPEG
            Function: !GetAtt
              - ImageConverterLambdaFunction
              - Arn
          - Event: 's3:ObjectCreated:*'
            Filter:
              S3Key:
                Rules:
                  - Name: suffix
                    Value: png
            Function: !GetAtt
              - ImageConverterLambdaFunction
              - Arn
          - Event: 's3:ObjectCreated:*'
            Filter:
              S3Key:
                Rules:
                  - Name: suffix
                    Value: PNG
            Function: !GetAtt
              - ImageConverterLambdaFunction
              - Arn
          - Event: 's3:ObjectCreated:*'
            Filter:
              S3Key:
                Rules:
                  - Name: suffix
                    Value: gif
            Function: !GetAtt
              - ImageConverterLambdaFunction
              - Arn
          - Event: 's3:ObjectCreated:*'
            Filter:
              S3Key:
                Rules:
                  - Name: suffix
                    Value: GIF
            Function: !GetAtt
              - ImageConverterLambdaFunction
              - Arn
          - Event: 's3:ObjectCreated:*'
            Filter:
              S3Key:
                Rules:
                  - Name: suffix
                    Value: bmp
            Function: !GetAtt
              - ImageConverterLambdaFunction
              - Arn
          - Event: 's3:ObjectCreated:*'
            Filter:
              S3Key:
                Rules:
                  - Name: suffix
                    Value: BMP
            Function: !GetAtt
              - ImageConverterLambdaFunction
              - Arn
